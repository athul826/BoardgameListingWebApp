pipeline {
    agent any
    
    tools {
        jdk 'jdk17'
        maven 'maven3'
    }
    environment {
        SCANNER_HOME= tool 'sonar'
    }

    stages {
        stage('git chekcout') {
            steps {
                git branch: 'main', url: 'https://github.com/athul826/BoardgameListingWebApp.git'
            }
        }
       stage('trivy file system scan') {
            steps { 
                sh "trivy fs --format json -o trivy-report.json ."
            }
        }

        stage('maven compile') {
            steps {
                sh 'mvn compile'
            }
        }
        stage('maven test') {
            steps {
                sh 'mvn test'
            }
        }
        stage('sonar-scanner') {
            steps { 
                withSonarQubeEnv('sonar-scanner') { 
                    sh '''${SCANNER_HOME}/bin/sonar-scanner \
                          -Dsonar.projectKey=boadGame \
                          -Dsonar.java.binaries=target/classes'''
    
                }
            }    
                
        }
        stage('quality-gate') {
            steps {
                script {
                        waitForQualityGate abortPipeline: false, credentialsId: 'sonar-id3'
                }
            }
        }
            
        stage('build the code') {
            steps {
                sh 'mvn package'
                
            }
        }
        stage('push artifact to nexus') {
            steps {
                withMaven(globalMavenSettingsConfig: 'global-settings', jdk: '', maven: '', mavenSettingsConfig: '', traceability: true) {
                    sh 'mvn deploy'
                }
            }
        } 
        stage('download artifact from  nexus') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'nexus-id', passwordVariable: 'password', usernameVariable: 'username')]) {
                    sh "curl -u ${username}:${password} -O http://98.70.56.167:8081/repository/maven-snapshots/com/javaproject/database_service_project/0.0.3-SNAPSHOT/database_service_project-0.0.3-20250401.221738-1.jar"
                }
                
            }
        }
        stage('build & tag docker image') {
            steps {
                script {
                    withDockerRegistry(credentialsId: 'docker-id', toolName: 'docker') {
                          sh "docker build -t athult123/boardgame:latest ."
                    }
                }
                
            }
        }
        stage('docker image scan') {
            steps {
                sh "trivy image --format json --output trivy-image-report.json athult123/boardgame:latest"
            }
        }
        stage('docker push') {
            steps {
                script {
                     withDockerRegistry(credentialsId: 'docker-id', toolName: 'docker') {
                          sh "docker push athult123/boardgame:latest"
                    }
                    
                }
            }
        }
        stage('deploy to k8s') {
            steps {
                withKubeConfig(caCertificate: '', clusterName: 'eks-athul-cluster', contextName: 'arn:aws:eks:us-east-2:605134438225:cluster/eks-athul-cluster', credentialsId: 'kubernets-credential', namespace: 'webapps', restrictKubeConfigAccess: false, serverUrl: 'https://2DF5386BDB099F8E6AAC5F76658D9B66.yl4.us-east-2.eks.amazonaws.com') {
                           sh "kubectl apply -f deployment-service.yml"
                }
            }
        }
        stage('verify-k8s') {
            steps {
                withKubeConfig(caCertificate: '', clusterName: 'eks-athul-cluster', contextName: 'arn:aws:eks:us-east-2:605134438225:cluster/eks-athul-cluster', credentialsId: 'kubernets-credential', namespace: 'webapps', restrictKubeConfigAccess: false, serverUrl: 'https://2DF5386BDB099F8E6AAC5F76658D9B66.yl4.us-east-2.eks.amazonaws.com') {
                           sh "kubectl get pods -n webapps"
                           sh "kubectl get svc -n webapps"
                }
            }
        }
    }
    post {
    success {
        emailext(
            subject: "✅ Jenkins Build SUCCESS",
            body: """
                ✅ Build SUCCESS

                The Jenkins build was successful.

                Click here to view the build details: ${env.BUILD_URL}
            """,
            mimeType: 'text/plain',
            attachmentsPattern: "trivy-image-report.json",
            to: "athultharol1994@gmail.com"
        )
    }
    failure {
        emailext(
            subject: "❌ Jenkins Build FAILURE",
            body: """
                ❌ Build FAILURE

                The Jenkins build failed.

                Please check the logs for more details.

                Click here to view the build details: ${env.BUILD_URL}
            """,
            mimeType: 'text/plain',
            attachmentsPattern: "trivy-image-report.json",
            to: "athultharol1994@gmail.com"
        )
    }
    }
}

